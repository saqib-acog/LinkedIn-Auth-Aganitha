<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
    <style>
      * {
        padding: 0;
        margin: 0;
        box-sizing: border-box;
      }
      html {
        font-family: system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI",
          Roboto, Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue",
          sans-serif;
      }
      main {
        min-height: 100vh;
        display: flex;
        justify-content: center;
        align-items: center;
        background-color: rgb(252, 252, 252);
        flex-direction: column;
      }
      .content {
        padding: 40px;
        border-radius: 5px;
        text-align: center;
        margin-bottom: 100px;
        background-color: white;
        box-shadow: rgba(0, 0, 0, 0.076) 5px 5px 50px;
      }
      img {
        width: 300px;
      }
      .content p {
        color: rgba(0, 0, 0, 0.65);
        font-size: 20px;
        margin: 5px;
        padding: 20px;
      }
      .content p.downloading {
        color: rgba(0, 0, 0, 0.7);
        font-size: 40px;
        font-weight: 500;
        margin-bottom: 20px;
      }
    </style>
  </head>
  <body>
    <main>
      <div class="content">
        <img src="assets/Logo.svg" alt="Aganitha Logo" />
        <p class="downloading">Download has started</p>
        <p class="redirecting">
          Redirecting to <span id="redirecturl-link-content"></span> in <span id="timer"></span>
        </p>
      </div>
    </main>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.19.2/axios.min.js"></script>
    <script>
      const resourceUrl = "<%= resourceUrl %>";
      const timer = document.getElementById("timer");
      const redirectUrl = "<%= referer %>";
      document.getElementById("redirecturl-link-content").textContent = redirectUrl;
      function redirect() {
        let time = 5;
        timer.textContent = time;
        const intervalId = setInterval(() => {
          if (time > 0) {
            time--;
            timer.textContent = time;
          } else {
            window.open(redirectUrl, "_self");
            clearInterval(intervalId);
          }
        }, 1000);
      }
      function download(resourceUrl) {
        axios({
          url: resourceUrl,
          method: "GET",
          responseType: "blob",
        }).then((response) => {
          const fileExtension = resourceUrl.split(".").pop();
          const filename = `aganitha-crystal-structure-prediction.${fileExtension}`;

          const url = window.URL.createObjectURL(new Blob([response.data]));
          const link = document.createElement("a");
          link.href = url;
          link.setAttribute("download", filename);
          document.body.appendChild(link);
          link.click();
          document.body.removeChild(link);
          window.URL.revokeObjectURL(url);
        });
      }
      download(resourceUrl);
      redirect();
    </script>
  </body>
</html>
